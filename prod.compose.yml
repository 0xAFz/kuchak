volumes:
  postgres_data:
  traefik_acme:

networks:
  kuchak_net:
    name: kuchak_net
    driver: bridge
  traefik_net:
    name: traefik_net
    driver: bridge

services:
  kuchak:
    build:
      context: .
      dockerfile: Dockerfile
    image: kuchak
    networks:
      - kuchak_net
      - traefik_net
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      traefik:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 30s
      resources:
        limits:
          cpus: '2.0'
          memory: 512M
        reservations:
          cpus: '2.0'
          memory: 256M
    labels:
      - traefik.enable=true
      - traefik.docker.network=kuchak_external_net
      - traefik.http.routers.kuchak.rule=Host(`${KUCHAK_SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.kuchak.entrypoints=http
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.kuchak-secure.entrypoints=https
      - traefik.http.routers.kuchak-secure.rule=Host(`${KUCHAK_SUBDOMAIN}.${DOMAIN}`)
      - traefik.http.routers.kuchak-secure.tls=true
      - traefik.http.routers.kuchak-secure.tls.certresolver=myresolver
      - traefik.http.services.kuchak.loadbalancer.server.port=1323

  redis:
    image: redis:7.4
    command: ["redis-server", "--maxmemory", "2gb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - kuchak_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 30s
      resources:
        limits:
          cpus: '1.0'
          memory: 2g
        reservations:
          cpus: '1.0'
          memory: 1g
        
  postgres:
    image: postgres:17-alpine3.20
    container_name: postgres_db
    env_file:
      - .env
    networks:
      - kuchak_net
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_APP_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 30s
      resources:
        limits:
          cpus: '2.0'
          memory: 2.5g
        reservations:
          cpus: '2.0'
          memory: 2g

  traefik:
    image: traefik:v3.2.0
    container_name: traefik
    command:
      - "--log.level=ERROR"
      - "--log.filepath=/log-file.log"
      - "--log.format=json"
      - "--api=true"
      - "--ping=true"
      - "--accesslog=true"
      - "--accesslog.fields.names.StartUTC=drop"
      - "--accesslog.bufferingsize=250"
      - "--api.insecure=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=traefik_net"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--metrics.prometheus=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/acme/acme.json"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_acme:/acme
    networks:
      - traefik_net
    healthcheck:
      test: wget --quiet --tries=1 --spider http://localhost:8080/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      mode: global
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 30s
      resources:
        limits:
          cpus: '2.0'
          memory: 512M
        reservations:
          cpus: '2.0'
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_net"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.middlewares.web-auth.basicauth.users=${WEB_AUTH_USER}:${WEB_AUTH_PASSWORD}"
      - "traefik.http.routers.traefik.middlewares=https-redirect"
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`${TRAEFIK_SUBDOMAIN}.${DOMAIN}`)"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.options=default"
      - "traefik.http.routers.traefik-secure.middlewares=web-auth"
      - "traefik.http.routers.traefik-secure.tls.certresolver=myresolver"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
